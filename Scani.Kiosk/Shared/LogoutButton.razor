@inject ActiveUserService ActiveUserService
@inject NavigationManager NavigationManager

<button class="btn btn-danger" disabled="@(!ActiveUserState.HasActiveUser)" @onclick="@HandleExitClicked" style="background-color: lightcoral;">
    <img src="/assets/images/stop-sign.svg" style="height: 50px; margin-left: -0.5em;" />
    Exit
</button>

@code {
    [Parameter] public EventCallback OnLogout { get; set; } = EventCallback.Empty;
    [CascadingParameter] public ActiveUserState ActiveUserState { get; set; } = null!;

    private async Task HandleExitClicked()
    {
        await ActiveUserService.LogoutActiveUserAsync();
        await OnLogout.InvokeAsync();
        NavigationManager.NavigateTo("/");
    }
}