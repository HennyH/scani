@implements IDisposable
@inject ActiveUserService _activeUserService;

<CascadingValue Value="@_activeUserState">
    @ChildContent
</CascadingValue>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private ActiveUserState _activeUserState = null!;

    protected override void OnInitialized()
    {
        _activeUserState = _activeUserService.ActiveUserState;
        _activeUserService.ActiveUserChanged += OnActiveUserChangedAsync;
    }

    private async Task OnActiveUserChangedAsync(ActiveUserState newUserState)
    {
        _activeUserState = newUserState;
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        _activeUserService.ActiveUserChanged -= OnActiveUserChangedAsync;
    }
}
